#!/bin/bash -e
. ../../blfs.comm

build_src() {
srcfil=wireless_tools.29.tar.gz
srcdir=wireless_tools.29
tar -xf $BLFSSRC/$PKGLETTER/$CURDIR/$srcfil
cd $srcdir

make
make PREFIX=$BUILDDIR/usr INSTALL_MAN=$BUILDDIR/usr/share/man install

cleanup_src .. $srcdir
}

gen_control() {
cat > $DEBIANDIR/control << EOF
$PKGHDR
Description: Tools for a wireless LAN
 The Wireless Extension (WE) is a generic API in the Linux kernel allowing a
 driver to expose configuration and statistics specific to common Wireless
 LANs to user space. A single set of tools can support all the variations of
 Wireless LANs, regardless of their type as long as the driver supports
 Wireless Extensions. WE parameters may also be changed on the fly without
 restarting the driver (or Linux).
 .
 The Wireless Tools (WT) package is a set of tools allowing manipulation of
 the Wireless Extensions. They use a textual interface to support the full
 Wireless Extension.
 .
 Kernel configuration:
 To use Wireless Tools, the kernel must have the appropriate drivers and other
 support available. The appropriate bus must also be available. For many
 laptops, the PCMCIA bus (CONFIG_PCCARD) needs to be built. In some cases,
 this bus support will also need to be built for embedded wireless cards. The
 appropriate bridge support also needs to be built. For many modern laptops,
 the CardBus host bridge (CONFIG_YENTA) will be needed.
 .
 In addition to the bus, the actual driver for the specific wireless card must
 also be available. There are many wireless cards and they don't all work with
 Linux. The first place to look for card support is the kernel. The drivers
 are located in Device Drivers → Network Device Support → Wireless LAN
 (non-hamradio). There are also external drivers available for some very
 common cards. For more information, look at the user notes.
 .
 After the correct drivers are loaded, the interface will appear in
 /proc/net/wireless.
 .
 [ifrename]
 renames network interfaces based on various static criteria.
 .
 [iwconfig]
 configures a wireless network interface.
 .
 [iwevent]
 displays wireless events generated by drivers and setting changes.
 .
 [iwgetid]
 reports ESSID, NWID or AP/Cell Address of wireless networks.
 .
 [iwlist]
 gets detailed wireless information from a wireless interface.
 .
 [iwpriv]
 configures optional (private) parameters of a wireless network interface.
 .
 [iwspy]
 gets wireless statistics from specific node.
 .
 [libiw.so]
 contains functions required by the wireless programs and provides an API for
 other programs.
EOF
}

build
